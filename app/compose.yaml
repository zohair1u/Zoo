
services:
###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB:-app}", "-U", "${POSTGRES_USER:-app}"]
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

###> doctrine/mongodb-odm-bundle ###
  mongodb:
    # In production, you may want to use a managed database service
    image: mongodb/mongodb-atlas-local:latest
    environment:
      - MONGODB_INITDB_DATABASE=${MONGODB_DB:-app}
      # You should definitely set a root username and password in production
      - MONGODB_INITDB_ROOT_USERNAME=${MONGODB_USERNAME:-}
      - MONGODB_INITDB_ROOT_PASSWORD=${MONGODB_PASSWORD:-}
    volumes:
      - mongodb_data:/data/db:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/mongodb/data:/data/db:rw
###< doctrine/mongodb-odm-bundle ###

volumes:
###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###

###> doctrine/mongodb-odm-bundle ###
  mongodb_data:
###< doctrine/mongodb-odm-bundle ###
